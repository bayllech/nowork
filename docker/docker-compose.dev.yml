services:
  backend:
    build:
      context: ..
      dockerfile: docker/backend.Dockerfile
      target: dev
    working_dir: /app/backend
    command: sh -c "pnpm install && pnpm run dev"
    environment:
      - NODE_ENV=development
      - CI=true
      - MYSQL_HOST=mysql
      - REDIS_HOST=redis
    env_file:
      - ../.env.dev
    volumes:
      - ../backend:/app/backend
      - backend_node_modules:/app/backend/node_modules
      - ../data/ip2region.xdb:/app/ip2region.xdb:ro
    ports:
      - "3000:3000"
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_healthy

  frontend:
    build:
      context: ..
      dockerfile: docker/frontend.Dockerfile
      target: dev
    working_dir: /app/frontend
    command: sh -c "pnpm install --frozen-lockfile && pnpm run dev -- --host 0.0.0.0 --port 5173"
    environment:
      - NODE_ENV=development
      - CI=true
    volumes:
      - ../frontend:/app/frontend
      - frontend_node_modules:/app/frontend/node_modules
    depends_on:
      backend:
        condition: service_started
    expose:
      - "5173"

  mysql:
    image: mysql:8.0
    command:
      - --default-authentication-plugin=mysql_native_password
      - --character-set-server=utf8mb4
      - --collation-server=utf8mb4_unicode_ci
    environment:
      MYSQL_ROOT_PASSWORD: root123
      MYSQL_DATABASE: nowork
      MYSQL_USER: nowork
      MYSQL_PASSWORD: nowork
    ports:
      - "3306:3306"
    volumes:
      - mysql-data-dev:/var/lib/mysql
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 5

  nginx:
    image: nginx:1.27-alpine
    depends_on:
      frontend:
        condition: service_started
      backend:
        condition: service_started
    ports:
      - "8080:80"
    volumes:
      - ./nginx.dev.conf:/etc/nginx/nginx.conf:ro
      - ../logs/nginx:/var/log/nginx

  redis:
    image: redis:7.2-alpine
    command: ["redis-server", "--appendonly", "yes"]
    ports:
      - "6379:6379"
    volumes:
      - redis-data-dev:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5

volumes:
  backend_node_modules:
  frontend_node_modules:
  mysql-data-dev:
  redis-data-dev:
