services:
  backend:
    build:
      context: ..
      dockerfile: docker/backend.Dockerfile
    image: nowork-backend:latest
    restart: unless-stopped
    env_file:
      - ../.env.prod
    environment:
      - NODE_ENV=production
      - MYSQL_HOST=mysql
      - REDIS_HOST=redis
    volumes:
      - ../data/ip2region.xdb:/app/ip2region.xdb:ro
    depends_on:
      - mysql
      - redis
    networks:
      - appnet

  mysql:
    image: mysql:8.0
    restart: unless-stopped
    command:
      - --default-authentication-plugin=mysql_native_password
      - --character-set-server=utf8mb4
      - --collation-server=utf8mb4_unicode_ci
    environment:
      MYSQL_ROOT_PASSWORD: change_me_prod
      MYSQL_DATABASE: nowork
      MYSQL_USER: nowork
      MYSQL_PASSWORD: change_me_prod
    volumes:
      - ../data/mysql:/var/lib/mysql
    networks:
      - appnet

  redis:
    image: redis:7.2-alpine
    restart: unless-stopped
    command: ["redis-server", "--appendonly", "yes"]
    volumes:
      - ../data/redis:/data
    networks:
      - appnet
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  nginx:
    build:
      context: ..
      dockerfile: docker/frontend.Dockerfile
    image: nowork-frontend:latest
    restart: unless-stopped
    depends_on:
      - backend
    ports:
      - "80:80"
    volumes:
      - ../logs/nginx:/var/log/nginx
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    networks:
      - appnet

networks:
  appnet:
    driver: bridge
